<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Academic</title>
    <link>https://example.com/post/</link>
      <atom:link href="https://example.com/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Wed, 28 Sep 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://example.com/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://example.com/post/</link>
    </image>
    
    <item>
      <title>Неделя 19.09-25.09</title>
      <link>https://example.com/post/%D0%BF%D0%BE%D1%81%D1%82-%D0%BE-%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5-19.09-25.09/</link>
      <pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/%D0%BF%D0%BE%D1%81%D1%82-%D0%BE-%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5-19.09-25.09/</guid>
      <description>&lt;h2 id=&#34;обзор&#34;&gt;Обзор&lt;/h2&gt;
&lt;p&gt;Прошлая неделя была очень загруженной. Я существовал в дне сурка. Я просыпался, ехал в вуз, приезжал домой, делал лабораторные и ложился спать. Это дало свои плоды, потому что прошлая неделя знаменуется окончанием работы над лабораторными. Мной было выполнено 14 штук. За это время я изучил много нового. Теперь я могу работать с Linux, как с родной системой. Изучил язык разметки Markdown и освоил работу в Github.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Обзор на Git</title>
      <link>https://example.com/post/%D0%BE%D0%B1%D0%B7%D0%BE%D1%80-%D0%BD%D0%B0-git/</link>
      <pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/%D0%BE%D0%B1%D0%B7%D0%BE%D1%80-%D0%BD%D0%B0-git/</guid>
      <description>&lt;h2 id=&#34;обзор&#34;&gt;Обзор&lt;/h2&gt;
&lt;p&gt;Git — абсолютный лидер по популярности среди современных систем управления версиями. Это развитый проект с активной поддержкой и открытым исходным кодом. Система Git была изначально разработана в 2005 году Линусом Торвальдсом — создателем ядра операционной системы Linux. Git применяется для управления версиями в рамках колоссального количества проектов по разработке ПО, как коммерческих, так и с открытым исходным кодом. Система используется множеством профессиональных разработчиков программного обеспечения. Она превосходно работает под управлением различных операционных систем и может применяться со множеством интегрированных сред разработки (IDE).&lt;/p&gt;
&lt;p&gt;Git — система управления версиями с распределенной архитектурой. В отличие от некогда популярных систем вроде CVS и Subversion (SVN), где полная история версий проекта доступна лишь в одном месте, в Git каждая рабочая копия кода сама по себе является репозиторием. Это позволяет всем разработчикам хранить историю изменений в полном объеме.&lt;/p&gt;
&lt;p&gt;Разработка в Git ориентирована на обеспечение высокой производительности, безопасности и гибкости распределенной системы.&lt;/p&gt;
&lt;p&gt;Производительность
Git показывает очень высокую производительность в сравнении со множеством альтернатив. Это возможно благодаря оптимизации процедур фиксации коммитов, создания веток, слияния и сравнения предыдущих версий. Алгоритмы Git разработаны с учетом глубокого знания атрибутов, характерных для реальных деревьев файлов исходного кода, а также типичной динамики их изменений и последовательностей доступа.&lt;/p&gt;
&lt;p&gt;Некоторые системы управления версиями руководствуются именами файлов при работе с деревом файлов и ведении истории версий. Вместо обработки названий система Git анализирует содержимое. Это важно, поскольку файлы исходного кода часто переименовывают, разделяют и меняют местами. Объектные файлы репозитория Git формируются с помощью дельта‑кодирования (фиксации отличий содержимого) и компрессии. Кроме того, такие файлы в чистом виде хранят объекты с содержимым каталога и метаданными версий.&lt;/p&gt;
&lt;p&gt;Вместе с тем распределенная архитектура системы сама по себе обеспечивает существенный прирост производительности.&lt;/p&gt;
&lt;p&gt;Рассмотрим пример: разработчик Элис меняет исходный код. Она добавляет функцию для будущей версии 2.0, после чего делает коммит и сопровождает изменения описанием. Затем она разрабатывает другую функцию и делает еще один коммит. Разумеется, эти изменения сохраняются в истории в виде отдельных рабочих элементов. Затем Элис переключается на ветку, соответствующую версии 1.3 того же ПО — так она сможет исправить баг, затрагивающий эту конкретную версию. Это нужно, чтобы команда Элис могла выпустить версию 1.3.1 с исправлениями до завершения работы над версией 2.0. Затем Элис вернется к ветке для версии 2.0 и продолжит работу над соответствующими функциями. Все перечисленные действия можно выполнить без доступа к сети, поэтому система Git отличается быстротой и надежностью, даже если работать в самолете. Когда Элис будет готова отправить все внесенные изменения в удаленный репозиторий, ей останется лишь выполнить команду push.&lt;/p&gt;
&lt;p&gt;Безопасность
При разработке в Git прежде всего обеспечивается целостность исходного кода под управлением системы. Содержимое файлов, а также объекты репозитория, фиксирующие взаимосвязи между файлами, каталогами, версиями, тегами и коммитами, защищены при помощи криптографически стойкого алгоритма хеширования SHA1. Он защищает код и историю изменений от случайных и злонамеренных модификаций, а также позволяет проследить историю в полном объеме.&lt;/p&gt;
&lt;p&gt;Использование Git гарантирует подлинность истории изменений исходного кода.&lt;/p&gt;
&lt;p&gt;В некоторых других системах управления версиями отсутствует защита от тайного внесения изменений. Это может стать серьезной угрозой информационной безопасности в любой организации, занимающейся разработкой ПО.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
